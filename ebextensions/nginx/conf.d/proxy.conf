option_settings:
  aws:elasticbeanstalk:environment:proxy:
    ProxyServer: nginx
  aws:elasticbeanstalk:environment:
    LoadBalancerType: application

files:
  "/etc/nginx/conf.d/01_cors_map.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      map $http_origin $cors_origin {
          default "*";
          "~^https?://localhost(:[0-9]+)?$" $http_origin;
          "~^https://.*\.vercel\.app$" $http_origin;
          "~^https://kalvi-track\.co\.in$" $http_origin;
          "~^https://www\.kalvi-track\.co\.in$" $http_origin;
          "~^https://.*\.cloudfront\.net$" $http_origin;
      }

  "/etc/nginx/conf.d/02_proxy.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      upstream backend {
          server 127.0.0.1:5000;
          keepalive 256;
      }

      server {
          listen 80;
          client_max_body_size 10M;
          client_body_timeout 120s;
location /health {
              access_log off;
              return 200 "healthy\n";
              add_header Content-Type text/plain;
          }
          # Handle OPTIONS preflight
        location / {
                      # CRITICAL: Handle OPTIONS preflight FIRST
                      if ($request_method = 'OPTIONS') {
                          add_header 'Access-Control-Allow-Origin' $allow_origin always;
                          add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD' always;
                          add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, Origin, Accept, Cache-Control' always;
                          add_header 'Access-Control-Allow-Credentials' 'true' always;
                          add_header 'Access-Control-Max-Age' '3600' always;
                          add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                          add_header 'Content-Length' '0' always;
                          return 204;
                      }

                      # Add CORS headers for actual requests
                      add_header 'Access-Control-Allow-Origin' $allow_origin always;
                      add_header 'Access-Control-Allow-Credentials' 'true' always;
                      add_header 'Access-Control-Expose-Headers' 'Authorization, Content-Type, Content-Length, X-Requested-With' always;

                      # Proxy to Spring Boot
                      proxy_pass http://springboot;
                      proxy_http_version 1.1;

                      # Standard proxy headers
                      proxy_set_header Host $host;
                      proxy_set_header X-Real-IP $remote_addr;
                      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                      proxy_set_header X-Forwarded-Proto $scheme;
                      proxy_set_header Connection "";

                      # Timeouts
                      proxy_connect_timeout 180s;
                      proxy_send_timeout 180s;
                      proxy_read_timeout 180s;
                  }
              }

        container_commands:
          01_remove_default_nginx:
            command: "rm -f /etc/nginx/conf.d/elasticbeanstalk/*.conf.bak"
            ignoreErrors: true
          02_reload_nginx:
            command: "nginx -t && systemctl reload nginx"