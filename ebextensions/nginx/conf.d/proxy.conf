# .ebextensions/proxy.config
# Custom Nginx configuration for Spring Boot app with proper CORS handling

option_settings:
  aws:elasticbeanstalk:environment:proxy:
    ProxyServer: nginx

files:
  "/etc/nginx/conf.d/proxy.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # Map to validate allowed origins
      map $http_origin $cors_origin {
          default "";
          "~^https://kalvitrack\.vercel\.app$" $http_origin;
          "~^https://[a-zA-Z0-9-]+\.vercel\.app$" $http_origin;
          "~^https://.*\.cloudfront\.net$" $http_origin;
          "~^https://www\.kalvi-track\.co\.in$" $http_origin;
          "~^http://localhost:[0-9]+$" $http_origin;
      }

      upstream backend {
          server 127.0.0.1:5000;
          keepalive 256;
      }

      server {
          listen 80;
          client_max_body_size 10M;
          client_body_timeout 120s;

          # Health check endpoint
          location /health {
              access_log off;
              return 200 "healthy\n";
              add_header Content-Type text/plain;
          }

          location / {
              # Handle OPTIONS preflight requests
              if ($request_method = 'OPTIONS') {
                  add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
                  add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD' always;
                  add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With, Access-Control-Request-Method, Access-Control-Request-Headers' always;
                  add_header 'Access-Control-Allow-Credentials' 'true' always;
                  add_header 'Access-Control-Max-Age' 3600 always;
                  add_header 'Content-Length' 0 always;
                  add_header 'Content-Type' 'text/plain; charset=UTF-8' always;
                  return 204;
              }

              # Add CORS headers to all responses
              add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
              add_header 'Access-Control-Allow-Credentials' 'true' always;
              add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD' always;
              add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;

              # Proxy to Spring Boot
              proxy_pass http://backend;
              proxy_http_version 1.1;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_set_header Connection "";
              proxy_set_header Origin "";

              proxy_connect_timeout 180s;
              proxy_send_timeout 180s;
              proxy_read_timeout 180s;

              # Don't proxy CORS headers from backend (we handle them in nginx)
              proxy_hide_header Access-Control-Allow-Origin;
              proxy_hide_header Access-Control-Allow-Credentials;
              proxy_hide_header Access-Control-Allow-Methods;
              proxy_hide_header Access-Control-Allow-Headers;
          }
      }

container_commands:
  01_remove_default_nginx:
    command: "rm -f /etc/nginx/conf.d/elasticbeanstalk/*.conf"
    ignoreErrors: true
  02_reload_nginx:
    command: "nginx -t && nginx -s reload || echo 'Nginx config test failed'"